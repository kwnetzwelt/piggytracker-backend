swagger: "2.0"
info:
  version: 1.0.0
  title: myapp
  description: My cool Mongoose, Typescript, Express app
basePath: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification

consumes:
  - application/json
produces:
  - application/json


definitions:
  EntryItem:
    type: object
    title: entry
    properties:
      date:
        type: string
        format: date
      value:
        type: number
        format: float
        example: 147.87
        minimum: 0
      remunerator:
        type: string
        example: "Jane Doe"
      category:
        type: string
        example: car
      info:
        type: string
        example: "new wheels"
  AddEntryBody:
    type: object
    title: entry
    required:
      - date
      - value
      - renumerator
      - category
    properties:
      date:
        type: string
        format: date
      value:
        type: number
        format: float
        example: 147.87
        minimum: 0
      remunerator:
        type: string
        example: "Jane Doe"
      category:
        type: string
        example: car
      info:
        type: string
        example: "new wheels"
  LoginBody:
    type: object
    title: login credentials
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
  LoginSuccessfulResponse:
    type: object
    title: Login was successful
    properties:
      message:
        type: string
        example: ok
      token:
        type: string
      userprofile:
        type: object
  UserDetails:
    type: object
    title: Details of the current user
    properties:
      username:
        type: string
      fullname:
        type: string
  MessageResponse:
    type: object
    title: A simple message
    properties:
      message:
        type: string
        example: ok
  ExampleBody:
    type: object
    title: example
    required:
      - name
    properties:
      name:
        type: string
        example: no_stress

paths:
  /bill:
    get:
      description: Get all bills
      responses:
        200:
          description: Success
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntryItem"
    post:
      description: Add a bill
      parameters:
        - name: entry
          in: body
          description: an entry
          required: true
          schema: 
            $ref: "#/definitions/AddEntryBody"
      responses:
        200:
          description: created
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Returns all examples
    post:
      tags:
        - Examples
      description: Create a new example
      parameters:
        - name: example
          in: body
          description: an example
          required: true
          schema: 
            $ref: "#/definitions/ExampleBody"
      responses:
        200:
          description: Returns newly created example

  /examples/{id}:
    get:
      tags:
        - Examples
      description: Get an example
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the example to retrieve
          type: string
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not found
    patch:
      tags:
        - Examples
      description: Update an example
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the example to update
          type: string
        - name: example
          in: body
          description: example attribtues to update
          required: true
          schema: 
            $ref: "#/definitions/ExampleBody"
      responses:
        200:
          description: Return updated examples
        404:
          description: Example not found
    delete:
      tags:
        - Examples
      description: Delete an example
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the example to delete
          type: string
      responses:
        204:
          description: Delete the example with the specified id
        404:
          description: Example not found

  /login:
    get:
      tags:
        - authentication
      description: Get user details
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/UserDetails'
    post:
      tags:
        - authentication
      description: Login with credentials
      parameters:
        - name: credentials
          in: body
          description: user credentials
          required: true
          schema: 
            $ref: '#/definitions/LoginBody'
      responses:
        200:
          description: login successful
          schema:
            $ref: '#/definitions/LoginSuccessfulResponse'
        401:
          description: login failed
  /logout:
    post:
      tags:
        - authentication
      description: Logout with credentials
      responses:
        200:
          description: login successful
          schema:
            $ref: '#/definitions/MessageResponse'
        401:
          description: login failed

  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
